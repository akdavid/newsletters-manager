[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "newsletters-manager"
version = "1.0.0"
description = "An intelligent newsletter management system using AI-powered detection and multi-agent architecture"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Anthony David", email = "your-email@example.com"}
]
maintainers = [
    {name = "Anthony David", email = "your-email@example.com"}
]
keywords = [
    "newsletter", 
    "email", 
    "ai", 
    "automation", 
    "multi-agent", 
    "gmail", 
    "outlook", 
    "summarization"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Email",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.5.2,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "sqlalchemy>=2.0.25,<3.0.0",
    "fastapi>=0.108.0,<1.0.0",
    "uvicorn[standard]>=0.25.0,<1.0.0",
    "google-auth>=2.26.2,<3.0.0",
    "google-auth-oauthlib>=1.2.0,<2.0.0",
    "google-auth-httplib2>=0.2.0,<1.0.0",
    "google-api-python-client>=2.114.0,<3.0.0",
    "msal>=1.26.0,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "openai>=1.7.2,<2.0.0",
    "apscheduler>=3.10.4,<4.0.0",
    "pytz>=2023.3",
    "loguru>=0.7.2,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "alembic>=1.13.1,<2.0.0",
    "click>=8.1.7,<9.0.0",
    "rich>=13.7.0,<14.0.0",
    "aiohttp>=3.9.1,<4.0.0",
    "email-validator>=2.1.0,<3.0.0",
    "html2text>=2020.1.16,<2025.0.0",
    "beautifulsoup4>=4.12.2,<5.0.0",
    "lxml>=4.9.4,<5.0.0",
    "python-dateutil>=2.8.2,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4,<8.0.0",
    "pytest-asyncio>=0.23.2,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.12.1,<25.0.0",
    "flake8>=7.0.0,<8.0.0",
    "isort>=5.13.2,<6.0.0",
    "mypy>=1.8.0,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
]
test = [
    "pytest>=7.4.4,<8.0.0",
    "pytest-asyncio>=0.23.2,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
]
docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.4.0,<10.0.0",
    "mkdocstrings[python]>=0.24.0,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/newsletters-manager"
Repository = "https://github.com/yourusername/newsletters-manager"
Documentation = "https://github.com/yourusername/newsletters-manager#readme"
Changelog = "https://github.com/yourusername/newsletters-manager/releases"
"Bug Tracker" = "https://github.com/yourusername/newsletters-manager/issues"

[project.scripts]
newsletters-manager = "src.main:main"
nm-api = "src.run_api:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml", "*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "google.auth.*",
    "google.oauth2.*",
    "googleapiclient.*",
    "msal.*",
    "apscheduler.*",
    "loguru",
    "rich.*",
    "click.*",
    "html2text",
    "beautifulsoup4",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration (in setup.cfg format, since flake8 doesn't support pyproject.toml yet)
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]